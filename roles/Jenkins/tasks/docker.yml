---

- name: Create network
  docker_network:
    name: "{{ jenkins_network }}"

- name: Pull image
  docker_image:
    name: "{{ jenkins_image }}"

- name: Check jenkins data container exists
  shell: docker ps -a --filter="name={{ jenkins_data_container_name }}"
  register: data_container

- name: Create data container
  docker_container:
    name: "{{ jenkins_data_container_name }}"
    image: "{{ jenkins_image }}"
    state: present
  when: data_container.stdout.find('{{ jenkins_data_container_name }}') == -1

- name: Check jenkins container exists
  shell: docker ps --filter="name={{ jenkins_container_name }}"
  register: jenkins_container

- name: Create jenkins container
  docker_container:
    name: "{{ jenkins_container_name }}"
    image: "{{ jenkins_image }}"
    state: started
    log_driver: "{{ jenkins_log_driver }}"
    log_options: "{{ jenkins_log_options }}"
    networks:
      - name: "{{ jenkins_network }}"
    published_ports: "{{ jenkins_published_ports }}"
    restart_policy: "{{ jenkins_restart_policy }}"
    volumes_from:
      - "{{ jenkins_data_container_name }}"
  when: jenkins_container.stdout.find('{{ jenkins_container_name }}') == -1

- name: Wait for Jenkins starts
  wait_for:
    port: 8080
    delay: 10
  when: jenkins_container.stdout.find('{{ jenkins_container_name }}') == -1

- name: Get initial admin password
  shell: docker run --rm --volumes-from={{ jenkins_container_name }} {{ jenkins_image }} cat /var/jenkins_home/secrets/initialAdminPassword
  register: admin_password
  when: jenkins_container.stdout.find('{{ jenkins_container_name }}') == -1

- name: Print initial admin password
  debug: msg="Initial admin password is`{{ admin_password.stdout }}`"
  when: jenkins_container.stdout.find('{{ jenkins_container_name }}') == -1

